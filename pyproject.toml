[build-system]  # https://python-poetry.org/docs/pyproject/#poetry-and-pep-517
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]  # https://python-poetry.org/docs/pyproject/
name = "cvxpy-portfolio-optimizer"
version = "0.0.0"
description = "Python package to optimize portfolios"
authors = ["Lorenzo Sattolo <l.sattolo96@gmail.com>"]
readme = "README.md"
repository = "https://github.com/lsattolo/cvxpy-portfolio-optimizer"

[tool.poetry.dependencies]  # https://python-poetry.org/docs/dependency-specification/
pydantic = ">=1.10.5"
python = ">=3.10.5"
cvxpy = ">=1.3.1"
pandas = ">=2.0.1"
numpy = ">=1.24.3"
matplotlib = "^3.8.2"
yfinance = "0.2.31"

[tool.poetry.group.test.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
absolufy-imports = ">=0.3.1"
black = { extras = ["jupyter"], version = ">=22.12.0" }
coverage = { extras = ["toml"], version = ">=7.2.1" }
mypy = ">=1.0.1"
poethepoet = ">=0.18.1"
pre-commit = ">=3.1.1"
pytest = ">=7.2.2"
pytest-clarity = ">=1.0.1"
pytest-mock = ">=3.10.0"
pytest-xdist = ">=3.2.0"
ruff = ">=0.0.254"

[tool.poetry.group.dev.dependencies]  # https://python-poetry.org/docs/master/managing-dependencies/
cruft = ">=2.12.0"
jupyterlab = ">=3.6.1"
pdoc = ">=13.0.0"
yfinance = ">=0.2"

[tool.black]  # https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file
line-length = 100
target-version = ["py310"]

[tool.coverage.report]  # https://coverage.readthedocs.io/en/latest/config.html#report
precision = 1
show_missing = true
skip_covered = true

[tool.coverage.run]  # https://coverage.readthedocs.io/en/latest/config.html#run
branch = true
command_line = "--module pytest"
data_file = "reports/.coverage"
source = ["src"]

[tool.coverage.xml]  # https://coverage.readthedocs.io/en/latest/config.html#xml
output = "reports/coverage.xml"

[tool.mypy]  # https://mypy.readthedocs.io/en/latest/config_file.html
junit_xml = "reports/mypy.xml"
plugins = "pydantic.mypy"
ignore_missing_imports = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unreachable = true

[tool.pytest.ini_options]  # https://docs.pytest.org/en/latest/reference/reference.html#ini-options-ref
addopts = "--color=yes --doctest-modules --exitfirst --failed-first --verbosity=2 --junitxml=reports/pytest.xml"
testpaths = ["src", "tests"]
xfail_strict = true

[tool.ruff]  # https://github.com/charliermarsh/ruff
fix = true
ignore-init-module-imports = true
line-length = 100
select = ["A", "B", "C4", "C90", "D", "DTZ", "E", "F", "I", "ISC", "N", "NPY", "PGH", "PIE", "PLC", "PLE", "PLR", "PLW", "PT", "RET", "RUF", "RSE", "SIM", "TID", "UP", "W", "YTT"]
ignore = ["E501", "PGH001", "PGH002", "PGH003", "RET504", "S101", "PLR2004"]
unfixable = ["F401", "F841"]
src = ["src", "tests"]
target-version = "py310"

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.poe.tasks]  # https://github.com/nat-n/poethepoet

  [tool.poe.tasks.docs]
  help = "Generate this package's docs"
  cmd = """
    pdoc
      --docformat $docformat
      --output-directory $outputdirectory
      cvxpy_portfolio_optimizer
    """

    [[tool.poe.tasks.docs.args]]
    help = "The docstring style (default: numpy)"
    name = "docformat"
    options = ["--docformat"]
    default = "numpy"

    [[tool.poe.tasks.docs.args]]
    help = "The output directory (default: docs)"
    name = "outputdirectory"
    options = ["--output-directory"]
    default = "docs"

  [tool.poe.tasks.lab]
  help = "Run Jupyter Lab"

    [[tool.poe.tasks.lab.sequence]]
    cmd = "mkdir -p notebooks"

    [[tool.poe.tasks.lab.sequence]]
    cmd = """
      jupyter lab
        --allow-root
        --notebook-dir notebooks
      """

  [tool.poe.tasks.lint]
  help = "Lint this package"

    [[tool.poe.tasks.lint.sequence]]
    cmd = """
      pre-commit run
        --all-files
        --color always
      """

  [tool.poe.tasks.test]
  help = "Test this package"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage run"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage report"

    [[tool.poe.tasks.test.sequence]]
    cmd = "coverage xml"
